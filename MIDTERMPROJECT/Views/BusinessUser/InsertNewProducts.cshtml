@model MIDTERMPROJECT.Models.ViewModels.NewProductVM
@{
    ViewBag.Title = "InsertNewProducts";

}


<div class="panel panel-body">
    <div class="col-md-3">
        @{ Html.RenderAction("SideMenuBar", "Home");}
    </div>

    <div class="col-md-9">
        @using (Html.BeginForm("InsertNewProducts", "BusinessUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <br />
                <h2 class="text-info text-center">ADD PRODUCT</h2>
                <br />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Product Name</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Price</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Image</label>
                    </div>

                    <div class="col-md-6">
                        <input class="btn btn-primary" type="file" id="imageBrowse" name="ImageFiles" />
                        <hr />

                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-responsive" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                            <a href="#" class="btn btn-default" onclick="Uploadimage()">Upload</a>
                        </div>

                        <div class="col-md-2 thumbnail" id="uploadedImage">


                        </div>


                    </div>
                </div>




                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Description</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">

                        <textarea name="productDescription" class="form-control"></textarea>
                        @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Quantity</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.productQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                            <div class="col-sm-3">
                                <label>Category</label>
                            </div>
                            @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-6">
                                @*@Html.EditorFor(model => model.categoryId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })*@

                                @if (ViewBag.CategoryList != null)
                                {
                                    @Html.DropDownListFor(model => model.categoryId, ViewBag.CategoryList as SelectList, "--Select Category--",
                                    new { @class = "form-control" })
                                }
                            </div>
                    @Html.HiddenFor(model=>model.categoryId)
                </div>

                <div class="form-group row">
                    <div class="col-md-2 col-md-offset-3">
                        <input type="submit" value="Create" class="btn btn-primary form-control" />
                    </div>
                    <div class="col-md-3">
                        @*//@Html.ActionLink("Back to List", "Index")*@
                        <a href="/Account/Login" class="btn btn-success">Login</a>
                    </div>

                </div>
            </div>
        }


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script src="//cdn.tiny.cloud/1/wusvvofwxzn5t4oanz2ykc894lvr080cqhfglg800qut17o8/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

            <script>

                tinymce.init({
                    selector: 'textarea',
                    plugins: 'lists',
                    menubar: 'file edit format'
                });


                $(document).ready(function () {

                    $("#imageBrowse").change(function () {

                        var File = this.files;

                        if (File && File[0]) {
                            ReadImage(File[0]);
                        }

                    })

                })



                var ReadImage = function (file) {

                    var reader = new FileReader;
                    var image = new Image;

                    reader.readAsDataURL(file);
                    reader.onload = function (_file) {

                        image.src = _file.target.result;
                        image.onload = function () {

                            var height = this.height;
                            var width = this.width;
                            var type = file.type;
                            var size = ~~(file.size / 1024) + "KB";

                            $("#targetImg").attr('src', _file.target.result);
                            $("#description").text("Size:" + size + ", " + height + "X " + width + ", " + type + "");
                            $("#imgPreview").show();

                        }

                    }

                }


                var ClearPreview = function () {
                    $("#imageBrowes").val('');
                    $("#description").text('');
                    $("#imgPreview").hide();
                }


                                                    //var Uploadimage = function () {
                                                    //    var file = $("#imageBrowse").get(0).files;
                                                    //    var data = new FormData;
                                                    //    data.append("ImageFile", file[0]);
                                                    //    data.append("User_Post", "Hello");

                                                    //    $.ajax({
                                                    //        type: "Post",
                                                    //        url: "/Social/AddNewPost",
                                                    //        data: data,
                                                    //        contentType: false,
                                                    //        processData: false,
                                                    //        success: function (response) {
                                                    //            ClearPreview();
                                                    //            $("#uploadedImage").append('<img src="/UploadedImage/' + response + '" class="img-responsive thumbnail"/>');
                                                    //            //$("#uploadedImage").append('<img src="/Social/RetriveImage?id=' + id + '" class="img-responsive thumbnail"/>');

                                                    //        }
                                                    //    })
                                                    //}


            </script>
        }
    </div>
</div>

