
@model MIDTERMPROJECT.Models.Dataase.Product
@{
    ViewBag.Title = "EditProduct";

}


<div class="panel panel-body">
    <div class="col-md-3">
        @{ Html.RenderAction("SideMenuBar", "Home");}
    </div>

    <div class="col-md-9">
        @using (Html.BeginForm("InsertNewProducts", "BusinessUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <br />
                <h2 class="text-info text-center">ADD PRODUCT</h2>
                <br />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Product Name</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Price</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Image</label>
                    </div>

                    <div class="col-md-6">
                        <input class="btn btn-primary" type="file" id="imageBrowse" name="ImageFiles" />
                        <hr />

                        <div id="imgPreview" class="thumbnail" style="display:none">
                            <img class="img-responsive" id="targetImg" />
                            <div class="caption">
                                <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                <span id="description"></span>
                            </div>
                            <a href="#" class="btn btn-default" onclick="Uploadimage()">Upload</a>
                        </div>

                        <div class="col-md-2 thumbnail" id="uploadedImage">


                        </div>


                    </div>
                </div>




                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Description</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">

                        <textarea name="productDescription" class="form-control" >@Model.productDescription</textarea>
                        @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Quantity</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.productQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.productQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3">
                        <label>Category</label>
                    </div>
                    @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.categoryId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })*@

                        @Html.DropDownListFor(model => model.categoryId, ViewBag.CatList as SelectList, "--Select Category---", new { @class = "form-control" })

                        @*@Html.DropDownListFor(model => model.categoryId, Model.CatList as SelectList, "--Select Category---", new { @class = "form-control" })*@

                        @*@if (ViewBag.CategoryList != null)
                        {
                            @Html.DropDownListFor(model => model.categoryId, ViewBag.CategoryList as SelectList, "--Select Category--",
                            new { @class = "form-control" })
                        }*@
                    </div>
                    @*@Html.HiddenFor(model=>model.categoryId)*@
                </div>

                <div class="form-group row">
                    <div class="col-md-2 col-md-offset-3">
                        <input type="submit" value="Create" class="btn btn-primary form-control" />
                    </div>
                    <div class="col-md-3">
                        @*//@Html.ActionLink("Back to List", "Index")*@
                        <a href="/Account/Login" class="btn btn-success">Login</a>
                    </div>

                </div>
            </div>
        }

@section Scripts{
            @Scripts.Render("~/bundles/jqueryval")
            <script src="//cdn.tiny.cloud/1/wusvvofwxzn5t4oanz2ykc894lvr080cqhfglg800qut17o8/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
            
        <script>
            tinymce.init({
                selector: 'textarea',
                plugins: 'lists',
                menubar: 'file edit format'
            });
        </script>
 }
    </div>
</div>



